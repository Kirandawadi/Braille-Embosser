
rotary_encoder_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000076  00800060  000009f0  00000a84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000028  008000d6  008000d6  00000afa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000afa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c5e  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000413  00000000  00000000  000018b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000084f  00000000  00000000  00001cc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ac  00000000  00000000  000027d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006ed  00000000  00000000  00002b84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00003271  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__vector_1>
   8:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 3d       	cpi	r26, 0xD6	; 214
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 ed       	ldi	r26, 0xD6	; 214
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 3f       	cpi	r26, 0xFE	; 254
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c0 02 	call	0x580	; 0x580 <main>
  8a:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_Init>:
		punch();
		paper_slide_forward();
		_delay_ms(500);
		
	}
}
  92:	2a b1       	in	r18, 0x0a	; 10
  94:	28 69       	ori	r18, 0x98	; 152
  96:	2a b9       	out	0x0a, r18	; 10
  98:	20 b5       	in	r18, 0x20	; 32
  9a:	26 68       	ori	r18, 0x86	; 134
  9c:	20 bd       	out	0x20, r18	; 32
  9e:	dc 01       	movw	r26, r24
  a0:	cb 01       	movw	r24, r22
  a2:	88 0f       	add	r24, r24
  a4:	99 1f       	adc	r25, r25
  a6:	aa 1f       	adc	r26, r26
  a8:	bb 1f       	adc	r27, r27
  aa:	88 0f       	add	r24, r24
  ac:	99 1f       	adc	r25, r25
  ae:	aa 1f       	adc	r26, r26
  b0:	bb 1f       	adc	r27, r27
  b2:	9c 01       	movw	r18, r24
  b4:	ad 01       	movw	r20, r26
  b6:	22 0f       	add	r18, r18
  b8:	33 1f       	adc	r19, r19
  ba:	44 1f       	adc	r20, r20
  bc:	55 1f       	adc	r21, r21
  be:	22 0f       	add	r18, r18
  c0:	33 1f       	adc	r19, r19
  c2:	44 1f       	adc	r20, r20
  c4:	55 1f       	adc	r21, r21
  c6:	60 e0       	ldi	r22, 0x00	; 0
  c8:	74 e2       	ldi	r23, 0x24	; 36
  ca:	84 ef       	ldi	r24, 0xF4	; 244
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__udivmodsi4>
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	82 0f       	add	r24, r18
  d6:	89 b9       	out	0x09, r24	; 9
  d8:	da 01       	movw	r26, r20
  da:	c9 01       	movw	r24, r18
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	a1 09       	sbc	r26, r1
  e0:	b1 09       	sbc	r27, r1
  e2:	89 2f       	mov	r24, r25
  e4:	9a 2f       	mov	r25, r26
  e6:	ab 2f       	mov	r26, r27
  e8:	bb 27       	eor	r27, r27
  ea:	80 bd       	out	0x20, r24	; 32
  ec:	08 95       	ret

000000ee <USART_TxChar>:
  ee:	8c b9       	out	0x0c, r24	; 12
  f0:	5d 9b       	sbis	0x0b, 5	; 11
  f2:	fe cf       	rjmp	.-4      	; 0xf0 <USART_TxChar+0x2>
  f4:	08 95       	ret

000000f6 <USART_SendString>:
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	ec 01       	movw	r28, r24
  fc:	88 81       	ld	r24, Y
  fe:	88 23       	and	r24, r24
 100:	31 f0       	breq	.+12     	; 0x10e <USART_SendString+0x18>
 102:	21 96       	adiw	r28, 0x01	; 1
 104:	0e 94 77 00 	call	0xee	; 0xee <USART_TxChar>
 108:	89 91       	ld	r24, Y+
 10a:	81 11       	cpse	r24, r1
 10c:	fb cf       	rjmp	.-10     	; 0x104 <USART_SendString+0xe>
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <print_VISION>:
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	c0 e0       	ldi	r28, 0x00	; 0
 11e:	d0 e0       	ldi	r29, 0x00	; 0
 120:	11 e0       	ldi	r17, 0x01	; 1
 122:	00 e0       	ldi	r16, 0x00	; 0
 124:	c2 30       	cpi	r28, 0x02	; 2
 126:	d1 05       	cpc	r29, r1
 128:	70 f0       	brcs	.+28     	; 0x146 <print_VISION+0x32>
 12a:	81 2f       	mov	r24, r17
 12c:	c4 30       	cpi	r28, 0x04	; 4
 12e:	d1 05       	cpc	r29, r1
 130:	09 f0       	breq	.+2      	; 0x134 <print_VISION+0x20>
 132:	80 2f       	mov	r24, r16
 134:	81 11       	cpse	r24, r1
 136:	07 c0       	rjmp	.+14     	; 0x146 <print_VISION+0x32>
 138:	21 2f       	mov	r18, r17
 13a:	ce 01       	movw	r24, r28
 13c:	8d 7f       	andi	r24, 0xFD	; 253
 13e:	08 97       	sbiw	r24, 0x08	; 8
 140:	09 f0       	breq	.+2      	; 0x144 <print_VISION+0x30>
 142:	20 2f       	mov	r18, r16
 144:	21 11       	cpse	r18, r1
 146:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <punch>
 14a:	ce 01       	movw	r24, r28
 14c:	81 70       	andi	r24, 0x01	; 1
 14e:	90 78       	andi	r25, 0x80	; 128
 150:	99 23       	and	r25, r25
 152:	24 f4       	brge	.+8      	; 0x15c <print_VISION+0x48>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	8e 6f       	ori	r24, 0xFE	; 254
 158:	9f 6f       	ori	r25, 0xFF	; 255
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	c9 f4       	brne	.+50     	; 0x192 <print_VISION+0x7e>
 160:	2a e9       	ldi	r18, 0x9A	; 154
 162:	39 e9       	ldi	r19, 0x99	; 153
 164:	49 e1       	ldi	r20, 0x19	; 25
 166:	5f e3       	ldi	r21, 0x3F	; 63
 168:	60 91 60 00 	lds	r22, 0x0060
 16c:	70 91 61 00 	lds	r23, 0x0061
 170:	80 91 62 00 	lds	r24, 0x0062
 174:	90 91 63 00 	lds	r25, 0x0063
 178:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 17c:	60 93 60 00 	sts	0x0060, r22
 180:	70 93 61 00 	sts	0x0061, r23
 184:	80 93 62 00 	sts	0x0062, r24
 188:	90 93 63 00 	sts	0x0063, r25
 18c:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 190:	18 c0       	rjmp	.+48     	; 0x1c2 <print_VISION+0xae>
 192:	2a e9       	ldi	r18, 0x9A	; 154
 194:	39 e9       	ldi	r19, 0x99	; 153
 196:	49 e9       	ldi	r20, 0x99	; 153
 198:	5e e3       	ldi	r21, 0x3E	; 62
 19a:	60 91 60 00 	lds	r22, 0x0060
 19e:	70 91 61 00 	lds	r23, 0x0061
 1a2:	80 91 62 00 	lds	r24, 0x0062
 1a6:	90 91 63 00 	lds	r25, 0x0063
 1aa:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 1ae:	60 93 60 00 	sts	0x0060, r22
 1b2:	70 93 61 00 	sts	0x0061, r23
 1b6:	80 93 62 00 	sts	0x0062, r24
 1ba:	90 93 63 00 	sts	0x0063, r25
 1be:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 1c2:	2f ef       	ldi	r18, 0xFF	; 255
 1c4:	85 ea       	ldi	r24, 0xA5	; 165
 1c6:	9e e0       	ldi	r25, 0x0E	; 14
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <print_VISION+0xb4>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <print_VISION+0xbe>
 1d2:	00 00       	nop
 1d4:	21 96       	adiw	r28, 0x01	; 1
 1d6:	cc 30       	cpi	r28, 0x0C	; 12
 1d8:	d1 05       	cpc	r29, r1
 1da:	09 f0       	breq	.+2      	; 0x1de <print_VISION+0xca>
 1dc:	a3 cf       	rjmp	.-186    	; 0x124 <print_VISION+0x10>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	a0 e0       	ldi	r26, 0x00	; 0
 1e4:	b0 e4       	ldi	r27, 0x40	; 64
 1e6:	80 93 60 00 	sts	0x0060, r24
 1ea:	90 93 61 00 	sts	0x0061, r25
 1ee:	a0 93 62 00 	sts	0x0062, r26
 1f2:	b0 93 63 00 	sts	0x0063, r27
 1f6:	bc 01       	movw	r22, r24
 1f8:	cd 01       	movw	r24, r26
 1fa:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	81 ee       	ldi	r24, 0xE1	; 225
 202:	94 e0       	ldi	r25, 0x04	; 4
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <print_VISION+0xf0>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <print_VISION+0xfa>
 20e:	00 00       	nop
 210:	0e 94 02 03 	call	0x604	; 0x604 <paper_slide_backward>
 214:	c0 e0       	ldi	r28, 0x00	; 0
 216:	d0 e0       	ldi	r29, 0x00	; 0
 218:	ce 01       	movw	r24, r28
 21a:	8d 7f       	andi	r24, 0xFD	; 253
 21c:	00 97       	sbiw	r24, 0x00	; 0
 21e:	29 f0       	breq	.+10     	; 0x22a <print_VISION+0x116>
 220:	84 30       	cpi	r24, 0x04	; 4
 222:	91 05       	cpc	r25, r1
 224:	11 f0       	breq	.+4      	; 0x22a <print_VISION+0x116>
 226:	09 97       	sbiw	r24, 0x09	; 9
 228:	11 f4       	brne	.+4      	; 0x22e <print_VISION+0x11a>
 22a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <punch>
 22e:	ce 01       	movw	r24, r28
 230:	81 70       	andi	r24, 0x01	; 1
 232:	90 78       	andi	r25, 0x80	; 128
 234:	99 23       	and	r25, r25
 236:	24 f4       	brge	.+8      	; 0x240 <print_VISION+0x12c>
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	8e 6f       	ori	r24, 0xFE	; 254
 23c:	9f 6f       	ori	r25, 0xFF	; 255
 23e:	01 96       	adiw	r24, 0x01	; 1
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	c9 f4       	brne	.+50     	; 0x276 <print_VISION+0x162>
 244:	2a e9       	ldi	r18, 0x9A	; 154
 246:	39 e9       	ldi	r19, 0x99	; 153
 248:	49 e1       	ldi	r20, 0x19	; 25
 24a:	5f e3       	ldi	r21, 0x3F	; 63
 24c:	60 91 60 00 	lds	r22, 0x0060
 250:	70 91 61 00 	lds	r23, 0x0061
 254:	80 91 62 00 	lds	r24, 0x0062
 258:	90 91 63 00 	lds	r25, 0x0063
 25c:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 260:	60 93 60 00 	sts	0x0060, r22
 264:	70 93 61 00 	sts	0x0061, r23
 268:	80 93 62 00 	sts	0x0062, r24
 26c:	90 93 63 00 	sts	0x0063, r25
 270:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 274:	18 c0       	rjmp	.+48     	; 0x2a6 <print_VISION+0x192>
 276:	2a e9       	ldi	r18, 0x9A	; 154
 278:	39 e9       	ldi	r19, 0x99	; 153
 27a:	49 e9       	ldi	r20, 0x99	; 153
 27c:	5e e3       	ldi	r21, 0x3E	; 62
 27e:	60 91 60 00 	lds	r22, 0x0060
 282:	70 91 61 00 	lds	r23, 0x0061
 286:	80 91 62 00 	lds	r24, 0x0062
 28a:	90 91 63 00 	lds	r25, 0x0063
 28e:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 292:	60 93 60 00 	sts	0x0060, r22
 296:	70 93 61 00 	sts	0x0061, r23
 29a:	80 93 62 00 	sts	0x0062, r24
 29e:	90 93 63 00 	sts	0x0063, r25
 2a2:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 2a6:	2f ef       	ldi	r18, 0xFF	; 255
 2a8:	85 ea       	ldi	r24, 0xA5	; 165
 2aa:	9e e0       	ldi	r25, 0x0E	; 14
 2ac:	21 50       	subi	r18, 0x01	; 1
 2ae:	80 40       	sbci	r24, 0x00	; 0
 2b0:	90 40       	sbci	r25, 0x00	; 0
 2b2:	e1 f7       	brne	.-8      	; 0x2ac <print_VISION+0x198>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <print_VISION+0x1a2>
 2b6:	00 00       	nop
 2b8:	21 96       	adiw	r28, 0x01	; 1
 2ba:	cc 30       	cpi	r28, 0x0C	; 12
 2bc:	d1 05       	cpc	r29, r1
 2be:	09 f0       	breq	.+2      	; 0x2c2 <print_VISION+0x1ae>
 2c0:	ab cf       	rjmp	.-170    	; 0x218 <print_VISION+0x104>
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	a0 e0       	ldi	r26, 0x00	; 0
 2c8:	b0 e4       	ldi	r27, 0x40	; 64
 2ca:	80 93 60 00 	sts	0x0060, r24
 2ce:	90 93 61 00 	sts	0x0061, r25
 2d2:	a0 93 62 00 	sts	0x0062, r26
 2d6:	b0 93 63 00 	sts	0x0063, r27
 2da:	bc 01       	movw	r22, r24
 2dc:	cd 01       	movw	r24, r26
 2de:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 2e2:	2f ef       	ldi	r18, 0xFF	; 255
 2e4:	81 ee       	ldi	r24, 0xE1	; 225
 2e6:	94 e0       	ldi	r25, 0x04	; 4
 2e8:	21 50       	subi	r18, 0x01	; 1
 2ea:	80 40       	sbci	r24, 0x00	; 0
 2ec:	90 40       	sbci	r25, 0x00	; 0
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <print_VISION+0x1d4>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <print_VISION+0x1de>
 2f2:	00 00       	nop
 2f4:	0e 94 02 03 	call	0x604	; 0x604 <paper_slide_backward>
 2f8:	c0 e0       	ldi	r28, 0x00	; 0
 2fa:	d0 e0       	ldi	r29, 0x00	; 0
 2fc:	11 e0       	ldi	r17, 0x01	; 1
 2fe:	00 e0       	ldi	r16, 0x00	; 0
 300:	20 97       	sbiw	r28, 0x00	; 0
 302:	c1 f0       	breq	.+48     	; 0x334 <print_VISION+0x220>
 304:	c3 30       	cpi	r28, 0x03	; 3
 306:	d1 05       	cpc	r29, r1
 308:	a9 f0       	breq	.+42     	; 0x334 <print_VISION+0x220>
 30a:	ce 01       	movw	r24, r28
 30c:	21 2f       	mov	r18, r17
 30e:	c5 30       	cpi	r28, 0x05	; 5
 310:	d1 05       	cpc	r29, r1
 312:	09 f0       	breq	.+2      	; 0x316 <print_VISION+0x202>
 314:	20 2f       	mov	r18, r16
 316:	21 11       	cpse	r18, r1
 318:	0d c0       	rjmp	.+26     	; 0x334 <print_VISION+0x220>
 31a:	41 2f       	mov	r20, r17
 31c:	9c 01       	movw	r18, r24
 31e:	27 50       	subi	r18, 0x07	; 7
 320:	31 09       	sbc	r19, r1
 322:	22 30       	cpi	r18, 0x02	; 2
 324:	31 05       	cpc	r19, r1
 326:	08 f0       	brcs	.+2      	; 0x32a <print_VISION+0x216>
 328:	40 2f       	mov	r20, r16
 32a:	41 11       	cpse	r20, r1
 32c:	03 c0       	rjmp	.+6      	; 0x334 <print_VISION+0x220>
 32e:	0a 97       	sbiw	r24, 0x0a	; 10
 330:	02 97       	sbiw	r24, 0x02	; 2
 332:	10 f4       	brcc	.+4      	; 0x338 <print_VISION+0x224>
 334:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <punch>
 338:	ce 01       	movw	r24, r28
 33a:	81 70       	andi	r24, 0x01	; 1
 33c:	90 78       	andi	r25, 0x80	; 128
 33e:	99 23       	and	r25, r25
 340:	24 f4       	brge	.+8      	; 0x34a <print_VISION+0x236>
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	8e 6f       	ori	r24, 0xFE	; 254
 346:	9f 6f       	ori	r25, 0xFF	; 255
 348:	01 96       	adiw	r24, 0x01	; 1
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	c9 f4       	brne	.+50     	; 0x380 <print_VISION+0x26c>
 34e:	2a e9       	ldi	r18, 0x9A	; 154
 350:	39 e9       	ldi	r19, 0x99	; 153
 352:	49 e1       	ldi	r20, 0x19	; 25
 354:	5f e3       	ldi	r21, 0x3F	; 63
 356:	60 91 60 00 	lds	r22, 0x0060
 35a:	70 91 61 00 	lds	r23, 0x0061
 35e:	80 91 62 00 	lds	r24, 0x0062
 362:	90 91 63 00 	lds	r25, 0x0063
 366:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 36a:	60 93 60 00 	sts	0x0060, r22
 36e:	70 93 61 00 	sts	0x0061, r23
 372:	80 93 62 00 	sts	0x0062, r24
 376:	90 93 63 00 	sts	0x0063, r25
 37a:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 37e:	18 c0       	rjmp	.+48     	; 0x3b0 <print_VISION+0x29c>
 380:	2a e9       	ldi	r18, 0x9A	; 154
 382:	39 e9       	ldi	r19, 0x99	; 153
 384:	49 e9       	ldi	r20, 0x99	; 153
 386:	5e e3       	ldi	r21, 0x3E	; 62
 388:	60 91 60 00 	lds	r22, 0x0060
 38c:	70 91 61 00 	lds	r23, 0x0061
 390:	80 91 62 00 	lds	r24, 0x0062
 394:	90 91 63 00 	lds	r25, 0x0063
 398:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 39c:	60 93 60 00 	sts	0x0060, r22
 3a0:	70 93 61 00 	sts	0x0061, r23
 3a4:	80 93 62 00 	sts	0x0062, r24
 3a8:	90 93 63 00 	sts	0x0063, r25
 3ac:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 3b0:	2f ef       	ldi	r18, 0xFF	; 255
 3b2:	85 ea       	ldi	r24, 0xA5	; 165
 3b4:	9e e0       	ldi	r25, 0x0E	; 14
 3b6:	21 50       	subi	r18, 0x01	; 1
 3b8:	80 40       	sbci	r24, 0x00	; 0
 3ba:	90 40       	sbci	r25, 0x00	; 0
 3bc:	e1 f7       	brne	.-8      	; 0x3b6 <print_VISION+0x2a2>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <print_VISION+0x2ac>
 3c0:	00 00       	nop
 3c2:	21 96       	adiw	r28, 0x01	; 1
 3c4:	cc 30       	cpi	r28, 0x0C	; 12
 3c6:	d1 05       	cpc	r29, r1
 3c8:	09 f0       	breq	.+2      	; 0x3cc <print_VISION+0x2b8>
 3ca:	9a cf       	rjmp	.-204    	; 0x300 <print_VISION+0x1ec>
 3cc:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <go_rotary_forward>
 3d0:	2f ef       	ldi	r18, 0xFF	; 255
 3d2:	8b e7       	ldi	r24, 0x7B	; 123
 3d4:	92 e9       	ldi	r25, 0x92	; 146
 3d6:	21 50       	subi	r18, 0x01	; 1
 3d8:	80 40       	sbci	r24, 0x00	; 0
 3da:	90 40       	sbci	r25, 0x00	; 0
 3dc:	e1 f7       	brne	.-8      	; 0x3d6 <print_VISION+0x2c2>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <print_VISION+0x2cc>
 3e0:	00 00       	nop
 3e2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <rotary_halt>
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <__vector_1>:
uint8_t tem=0;
double linear_position=2;
int volatile punch_pin[6] = {0,0,0,0,0,0};

ISR(INT0_vect)				//used by linear
{
 3f0:	1f 92       	push	r1
 3f2:	0f 92       	push	r0
 3f4:	0f b6       	in	r0, 0x3f	; 63
 3f6:	0f 92       	push	r0
 3f8:	11 24       	eor	r1, r1
 3fa:	2f 93       	push	r18
 3fc:	3f 93       	push	r19
 3fe:	4f 93       	push	r20
 400:	5f 93       	push	r21
 402:	6f 93       	push	r22
 404:	7f 93       	push	r23
 406:	8f 93       	push	r24
 408:	9f 93       	push	r25
 40a:	af 93       	push	r26
 40c:	bf 93       	push	r27
 40e:	ef 93       	push	r30
 410:	ff 93       	push	r31
		if(((bit_is_clear(PINC,PC0))==(bit_is_clear(PIND,PD2)))||((bit_is_set(PINC,PC0))==(bit_is_set(PIND,PD2))))
 412:	93 b3       	in	r25, 0x13	; 19
 414:	80 b3       	in	r24, 0x10	; 16
 416:	91 70       	andi	r25, 0x01	; 1
 418:	82 fb       	bst	r24, 2
 41a:	22 27       	eor	r18, r18
 41c:	20 f9       	bld	r18, 0
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	82 27       	eor	r24, r18
 422:	98 13       	cpse	r25, r24
 424:	06 c0       	rjmp	.+12     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 426:	83 b3       	in	r24, 0x13	; 19
 428:	90 b3       	in	r25, 0x10	; 16
 42a:	94 70       	andi	r25, 0x04	; 4
 42c:	81 70       	andi	r24, 0x01	; 1
 42e:	98 13       	cpse	r25, r24
 430:	17 c0       	rjmp	.+46     	; 0x460 <__FUSE_REGION_LENGTH__+0x60>
		{
			--linear_counter;
 432:	60 91 fa 00 	lds	r22, 0x00FA
 436:	70 91 fb 00 	lds	r23, 0x00FB
 43a:	80 91 fc 00 	lds	r24, 0x00FC
 43e:	90 91 fd 00 	lds	r25, 0x00FD
 442:	20 e0       	ldi	r18, 0x00	; 0
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	40 e8       	ldi	r20, 0x80	; 128
 448:	5f e3       	ldi	r21, 0x3F	; 63
 44a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__subsf3>
 44e:	60 93 fa 00 	sts	0x00FA, r22
 452:	70 93 fb 00 	sts	0x00FB, r23
 456:	80 93 fc 00 	sts	0x00FC, r24
 45a:	90 93 fd 00 	sts	0x00FD, r25
 45e:	16 c0       	rjmp	.+44     	; 0x48c <__FUSE_REGION_LENGTH__+0x8c>
			
		}
		else
		{
			++linear_counter;
 460:	60 91 fa 00 	lds	r22, 0x00FA
 464:	70 91 fb 00 	lds	r23, 0x00FB
 468:	80 91 fc 00 	lds	r24, 0x00FC
 46c:	90 91 fd 00 	lds	r25, 0x00FD
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	40 e8       	ldi	r20, 0x80	; 128
 476:	5f e3       	ldi	r21, 0x3F	; 63
 478:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 47c:	60 93 fa 00 	sts	0x00FA, r22
 480:	70 93 fb 00 	sts	0x00FB, r23
 484:	80 93 fc 00 	sts	0x00FC, r24
 488:	90 93 fd 00 	sts	0x00FD, r25
		}

}
 48c:	ff 91       	pop	r31
 48e:	ef 91       	pop	r30
 490:	bf 91       	pop	r27
 492:	af 91       	pop	r26
 494:	9f 91       	pop	r25
 496:	8f 91       	pop	r24
 498:	7f 91       	pop	r23
 49a:	6f 91       	pop	r22
 49c:	5f 91       	pop	r21
 49e:	4f 91       	pop	r20
 4a0:	3f 91       	pop	r19
 4a2:	2f 91       	pop	r18
 4a4:	0f 90       	pop	r0
 4a6:	0f be       	out	0x3f, r0	; 63
 4a8:	0f 90       	pop	r0
 4aa:	1f 90       	pop	r1
 4ac:	18 95       	reti

000004ae <__vector_2>:

ISR(INT1_vect)			//used by rotary
{
 4ae:	1f 92       	push	r1
 4b0:	0f 92       	push	r0
 4b2:	0f b6       	in	r0, 0x3f	; 63
 4b4:	0f 92       	push	r0
 4b6:	11 24       	eor	r1, r1
 4b8:	2f 93       	push	r18
 4ba:	3f 93       	push	r19
 4bc:	4f 93       	push	r20
 4be:	5f 93       	push	r21
 4c0:	6f 93       	push	r22
 4c2:	7f 93       	push	r23
 4c4:	8f 93       	push	r24
 4c6:	9f 93       	push	r25
 4c8:	af 93       	push	r26
 4ca:	bf 93       	push	r27
 4cc:	ef 93       	push	r30
 4ce:	ff 93       	push	r31
	
	if(((bit_is_clear(PINB,PB0))==(bit_is_clear(PIND,PD3)))||((bit_is_set(PINB,PB0))==(bit_is_set(PIND,PD3))))
 4d0:	96 b3       	in	r25, 0x16	; 22
 4d2:	80 b3       	in	r24, 0x10	; 16
 4d4:	91 70       	andi	r25, 0x01	; 1
 4d6:	83 fb       	bst	r24, 3
 4d8:	22 27       	eor	r18, r18
 4da:	20 f9       	bld	r18, 0
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	82 27       	eor	r24, r18
 4e0:	98 13       	cpse	r25, r24
 4e2:	06 c0       	rjmp	.+12     	; 0x4f0 <__vector_2+0x42>
 4e4:	86 b3       	in	r24, 0x16	; 22
 4e6:	90 b3       	in	r25, 0x10	; 16
 4e8:	98 70       	andi	r25, 0x08	; 8
 4ea:	81 70       	andi	r24, 0x01	; 1
 4ec:	98 13       	cpse	r25, r24
 4ee:	17 c0       	rjmp	.+46     	; 0x51e <__vector_2+0x70>
	{
		
		++rotary_counter;
 4f0:	60 91 e2 00 	lds	r22, 0x00E2
 4f4:	70 91 e3 00 	lds	r23, 0x00E3
 4f8:	80 91 e4 00 	lds	r24, 0x00E4
 4fc:	90 91 e5 00 	lds	r25, 0x00E5
 500:	20 e0       	ldi	r18, 0x00	; 0
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	40 e8       	ldi	r20, 0x80	; 128
 506:	5f e3       	ldi	r21, 0x3F	; 63
 508:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__addsf3>
 50c:	60 93 e2 00 	sts	0x00E2, r22
 510:	70 93 e3 00 	sts	0x00E3, r23
 514:	80 93 e4 00 	sts	0x00E4, r24
 518:	90 93 e5 00 	sts	0x00E5, r25
 51c:	16 c0       	rjmp	.+44     	; 0x54a <__vector_2+0x9c>
		
	}
	else
	{
		--rotary_counter;
 51e:	60 91 e2 00 	lds	r22, 0x00E2
 522:	70 91 e3 00 	lds	r23, 0x00E3
 526:	80 91 e4 00 	lds	r24, 0x00E4
 52a:	90 91 e5 00 	lds	r25, 0x00E5
 52e:	20 e0       	ldi	r18, 0x00	; 0
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	40 e8       	ldi	r20, 0x80	; 128
 534:	5f e3       	ldi	r21, 0x3F	; 63
 536:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__subsf3>
 53a:	60 93 e2 00 	sts	0x00E2, r22
 53e:	70 93 e3 00 	sts	0x00E3, r23
 542:	80 93 e4 00 	sts	0x00E4, r24
 546:	90 93 e5 00 	sts	0x00E5, r25
	}
	
}
 54a:	ff 91       	pop	r31
 54c:	ef 91       	pop	r30
 54e:	bf 91       	pop	r27
 550:	af 91       	pop	r26
 552:	9f 91       	pop	r25
 554:	8f 91       	pop	r24
 556:	7f 91       	pop	r23
 558:	6f 91       	pop	r22
 55a:	5f 91       	pop	r21
 55c:	4f 91       	pop	r20
 55e:	3f 91       	pop	r19
 560:	2f 91       	pop	r18
 562:	0f 90       	pop	r0
 564:	0f be       	out	0x3f, r0	; 63
 566:	0f 90       	pop	r0
 568:	1f 90       	pop	r1
 56a:	18 95       	reti

0000056c <__vector_13>:

ISR(USART_RXC_vect)
{
 56c:	1f 92       	push	r1
 56e:	0f 92       	push	r0
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	0f 92       	push	r0
 574:	11 24       	eor	r1, r1
			go_rotary_backward();
		}
*/


}
 576:	0f 90       	pop	r0
 578:	0f be       	out	0x3f, r0	; 63
 57a:	0f 90       	pop	r0
 57c:	1f 90       	pop	r1
 57e:	18 95       	reti

00000580 <main>:


int main(void)
{
	DDRA |= 1<<PINA1;			//Controlling relay through this pin
 580:	d1 9a       	sbi	0x1a, 1	; 26
	PORTA |= 1<<PINA1;
 582:	d9 9a       	sbi	0x1b, 1	; 27
	DDRC &= ~(1<<PINC0);			//making PINC0 as interrupt taker for INT0
 584:	a0 98       	cbi	0x14, 0	; 20
	//DDRD &= ~(1<<PIND3);			//making INT1 as input
	DDRB = 0xFF;			//All pins are output for Motors 1 and 2
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	87 bb       	out	0x17, r24	; 23
	sei();
 58a:	78 94       	sei
	USART_Init(38400);
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	76 e9       	ldi	r23, 0x96	; 150
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 49 00 	call	0x92	; 0x92 <USART_Init>
	GICR = (1<<INT0)|(1<<INT1);				//|(1<<INT2)
 598:	80 ec       	ldi	r24, 0xC0	; 192
 59a:	8b bf       	out	0x3b, r24	; 59
    MCUCR = (1<<ISC00)|(1<<ISC10);			//Both INT0 and INT1 interrupt on both edges(rising and falling)
 59c:	85 e0       	ldi	r24, 0x05	; 5
 59e:	85 bf       	out	0x35, r24	; 53
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5a0:	2f ef       	ldi	r18, 0xFF	; 255
 5a2:	87 ea       	ldi	r24, 0xA7	; 167
 5a4:	91 e6       	ldi	r25, 0x61	; 97
 5a6:	21 50       	subi	r18, 0x01	; 1
 5a8:	80 40       	sbci	r24, 0x00	; 0
 5aa:	90 40       	sbci	r25, 0x00	; 0
 5ac:	e1 f7       	brne	.-8      	; 0x5a6 <main+0x26>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <main+0x30>
 5b0:	00 00       	nop
	//TCCR1B |= (1<<CS12)|(1<<CS10);
	
	//double i=30;
	
	_delay_ms(2000);
 	set_position_cm(linear_position);
 5b2:	60 91 60 00 	lds	r22, 0x0060
 5b6:	70 91 61 00 	lds	r23, 0x0061
 5ba:	80 91 62 00 	lds	r24, 0x0062
 5be:	90 91 63 00 	lds	r25, 0x0063
 5c2:	0e 94 10 03 	call	0x620	; 0x620 <set_position_cm>
 	USART_SendString("Calibrating your system....\n");
 5c6:	88 eb       	ldi	r24, 0xB8	; 184
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
	
	
	print_VISION();
 5ce:	0e 94 8a 00 	call	0x114	; 0x114 <print_VISION>
// 		 for(int i=3;i<30;i++)
// 			 {
// 				 	set_position_cm(i);
// 					 _delay_ms(500);
// 			 }
		}
 5d2:	ff cf       	rjmp	.-2      	; 0x5d2 <main+0x52>

000005d4 <punch>:

void paper_slide_forward(void)
{
	go_rotary_forward();
	_delay_ms(30);
	rotary_halt();
 5d4:	d9 98       	cbi	0x1b, 1	; 27
 5d6:	2f ef       	ldi	r18, 0xFF	; 255
 5d8:	89 e6       	ldi	r24, 0x69	; 105
 5da:	98 e1       	ldi	r25, 0x18	; 24
 5dc:	21 50       	subi	r18, 0x01	; 1
 5de:	80 40       	sbci	r24, 0x00	; 0
 5e0:	90 40       	sbci	r25, 0x00	; 0
 5e2:	e1 f7       	brne	.-8      	; 0x5dc <punch+0x8>
 5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <punch+0x12>
 5e6:	00 00       	nop
 5e8:	82 e0       	ldi	r24, 0x02	; 2
 5ea:	8b bb       	out	0x1b, r24	; 27
 5ec:	08 95       	ret

000005ee <linear_halt>:
 5ee:	88 b3       	in	r24, 0x18	; 24
 5f0:	83 7f       	andi	r24, 0xF3	; 243
 5f2:	88 bb       	out	0x18, r24	; 24
 5f4:	08 95       	ret

000005f6 <go_rotary_forward>:
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	88 bb       	out	0x18, r24	; 24
 5fa:	08 95       	ret

000005fc <rotary_halt>:
 5fc:	88 b3       	in	r24, 0x18	; 24
 5fe:	8c 7f       	andi	r24, 0xFC	; 252
 600:	88 bb       	out	0x18, r24	; 24
 602:	08 95       	ret

00000604 <paper_slide_backward>:



void go_rotary_backward(void)
{
	PORTB = (1<<ROTARY_MOTOR_2);
 604:	82 e0       	ldi	r24, 0x02	; 2
 606:	88 bb       	out	0x18, r24	; 24
 608:	2f ef       	ldi	r18, 0xFF	; 255
 60a:	86 e7       	ldi	r24, 0x76	; 118
 60c:	91 e0       	ldi	r25, 0x01	; 1
 60e:	21 50       	subi	r18, 0x01	; 1
 610:	80 40       	sbci	r24, 0x00	; 0
 612:	90 40       	sbci	r25, 0x00	; 0
 614:	e1 f7       	brne	.-8      	; 0x60e <paper_slide_backward+0xa>
 616:	00 c0       	rjmp	.+0      	; 0x618 <paper_slide_backward+0x14>
 618:	00 00       	nop

void paper_slide_backward(void)
{
	go_rotary_backward();
	_delay_ms(30);
	rotary_halt();
 61a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <rotary_halt>
 61e:	08 95       	ret

00000620 <set_position_cm>:
}



 void set_position_cm(double value)
 {
 620:	cf 92       	push	r12
 622:	df 92       	push	r13
 624:	ef 92       	push	r14
 626:	ff 92       	push	r15
 628:	cf 93       	push	r28
 	value = value*117;
 62a:	20 e0       	ldi	r18, 0x00	; 0
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	4a ee       	ldi	r20, 0xEA	; 234
 630:	52 e4       	ldi	r21, 0x42	; 66
 632:	0e 94 67 04 	call	0x8ce	; 0x8ce <__mulsf3>
 636:	6b 01       	movw	r12, r22
 638:	7c 01       	movw	r14, r24
	if(value>linear_counter)
 63a:	20 91 fa 00 	lds	r18, 0x00FA
 63e:	30 91 fb 00 	lds	r19, 0x00FB
 642:	40 91 fc 00 	lds	r20, 0x00FC
 646:	50 91 fd 00 	lds	r21, 0x00FD
 64a:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__gesf2>
 64e:	18 16       	cp	r1, r24
 650:	f4 f4       	brge	.+60     	; 0x68e <set_position_cm+0x6e>
	{
 	while( value > linear_counter)
 652:	20 91 fa 00 	lds	r18, 0x00FA
 656:	30 91 fb 00 	lds	r19, 0x00FB
 65a:	40 91 fc 00 	lds	r20, 0x00FC
 65e:	50 91 fd 00 	lds	r21, 0x00FD
 662:	c7 01       	movw	r24, r14
 664:	b6 01       	movw	r22, r12
 666:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__gesf2>
 66a:	18 16       	cp	r1, r24
 66c:	84 f4       	brge	.+32     	; 0x68e <set_position_cm+0x6e>
}

void go_linear_forward(void)
{

	PORTB = (1<<LINEAR_MOTOR_1);
 66e:	c4 e0       	ldi	r28, 0x04	; 4
 670:	c8 bb       	out	0x18, r28	; 24
 void set_position_cm(double value)
 {
 	value = value*117;
	if(value>linear_counter)
	{
 	while( value > linear_counter)
 672:	20 91 fa 00 	lds	r18, 0x00FA
 676:	30 91 fb 00 	lds	r19, 0x00FB
 67a:	40 91 fc 00 	lds	r20, 0x00FC
 67e:	50 91 fd 00 	lds	r21, 0x00FD
 682:	c7 01       	movw	r24, r14
 684:	b6 01       	movw	r22, r12
 686:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__gesf2>
 68a:	18 16       	cp	r1, r24
 68c:	8c f3       	brlt	.-30     	; 0x670 <set_position_cm+0x50>
 	{
 		go_linear_forward();
 	}
	}
	if(value<linear_counter)
 68e:	20 91 fa 00 	lds	r18, 0x00FA
 692:	30 91 fb 00 	lds	r19, 0x00FB
 696:	40 91 fc 00 	lds	r20, 0x00FC
 69a:	50 91 fd 00 	lds	r21, 0x00FD
 69e:	c7 01       	movw	r24, r14
 6a0:	b6 01       	movw	r22, r12
 6a2:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 6a6:	88 23       	and	r24, r24
 6a8:	f4 f4       	brge	.+60     	; 0x6e6 <set_position_cm+0xc6>
	{
		while( value < linear_counter)
 6aa:	20 91 fa 00 	lds	r18, 0x00FA
 6ae:	30 91 fb 00 	lds	r19, 0x00FB
 6b2:	40 91 fc 00 	lds	r20, 0x00FC
 6b6:	50 91 fd 00 	lds	r21, 0x00FD
 6ba:	c7 01       	movw	r24, r14
 6bc:	b6 01       	movw	r22, r12
 6be:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 6c2:	88 23       	and	r24, r24
 6c4:	84 f4       	brge	.+32     	; 0x6e6 <set_position_cm+0xc6>
	
}

void go_linear_backward(void)
{
	PORTB = (1<<LINEAR_MOTOR_2);
 6c6:	c8 e0       	ldi	r28, 0x08	; 8
 6c8:	c8 bb       	out	0x18, r28	; 24
 		go_linear_forward();
 	}
	}
	if(value<linear_counter)
	{
		while( value < linear_counter)
 6ca:	20 91 fa 00 	lds	r18, 0x00FA
 6ce:	30 91 fb 00 	lds	r19, 0x00FB
 6d2:	40 91 fc 00 	lds	r20, 0x00FC
 6d6:	50 91 fd 00 	lds	r21, 0x00FD
 6da:	c7 01       	movw	r24, r14
 6dc:	b6 01       	movw	r22, r12
 6de:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__cmpsf2>
 6e2:	88 23       	and	r24, r24
 6e4:	8c f3       	brlt	.-30     	; 0x6c8 <set_position_cm+0xa8>
// 	 while(value<linear_counter)					//Test this (Not tested)
// 	 {
// 		 go_linear_backward();
// 	 }
//  	
 	linear_halt();
 6e6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <linear_halt>
 		
 }
 6ea:	cf 91       	pop	r28
 6ec:	ff 90       	pop	r15
 6ee:	ef 90       	pop	r14
 6f0:	df 90       	pop	r13
 6f2:	cf 90       	pop	r12
 6f4:	08 95       	ret

000006f6 <__subsf3>:
 6f6:	50 58       	subi	r21, 0x80	; 128

000006f8 <__addsf3>:
 6f8:	bb 27       	eor	r27, r27
 6fa:	aa 27       	eor	r26, r26
 6fc:	0e 94 93 03 	call	0x726	; 0x726 <__addsf3x>
 700:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_round>
 704:	0e 94 1a 04 	call	0x834	; 0x834 <__fp_pscA>
 708:	38 f0       	brcs	.+14     	; 0x718 <__addsf3+0x20>
 70a:	0e 94 21 04 	call	0x842	; 0x842 <__fp_pscB>
 70e:	20 f0       	brcs	.+8      	; 0x718 <__addsf3+0x20>
 710:	39 f4       	brne	.+14     	; 0x720 <__addsf3+0x28>
 712:	9f 3f       	cpi	r25, 0xFF	; 255
 714:	19 f4       	brne	.+6      	; 0x71c <__addsf3+0x24>
 716:	26 f4       	brtc	.+8      	; 0x720 <__addsf3+0x28>
 718:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_nan>
 71c:	0e f4       	brtc	.+2      	; 0x720 <__addsf3+0x28>
 71e:	e0 95       	com	r30
 720:	e7 fb       	bst	r30, 7
 722:	0c 94 11 04 	jmp	0x822	; 0x822 <__fp_inf>

00000726 <__addsf3x>:
 726:	e9 2f       	mov	r30, r25
 728:	0e 94 39 04 	call	0x872	; 0x872 <__fp_split3>
 72c:	58 f3       	brcs	.-42     	; 0x704 <__addsf3+0xc>
 72e:	ba 17       	cp	r27, r26
 730:	62 07       	cpc	r22, r18
 732:	73 07       	cpc	r23, r19
 734:	84 07       	cpc	r24, r20
 736:	95 07       	cpc	r25, r21
 738:	20 f0       	brcs	.+8      	; 0x742 <__addsf3x+0x1c>
 73a:	79 f4       	brne	.+30     	; 0x75a <__addsf3x+0x34>
 73c:	a6 f5       	brtc	.+104    	; 0x7a6 <__addsf3x+0x80>
 73e:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__fp_zero>
 742:	0e f4       	brtc	.+2      	; 0x746 <__addsf3x+0x20>
 744:	e0 95       	com	r30
 746:	0b 2e       	mov	r0, r27
 748:	ba 2f       	mov	r27, r26
 74a:	a0 2d       	mov	r26, r0
 74c:	0b 01       	movw	r0, r22
 74e:	b9 01       	movw	r22, r18
 750:	90 01       	movw	r18, r0
 752:	0c 01       	movw	r0, r24
 754:	ca 01       	movw	r24, r20
 756:	a0 01       	movw	r20, r0
 758:	11 24       	eor	r1, r1
 75a:	ff 27       	eor	r31, r31
 75c:	59 1b       	sub	r21, r25
 75e:	99 f0       	breq	.+38     	; 0x786 <__addsf3x+0x60>
 760:	59 3f       	cpi	r21, 0xF9	; 249
 762:	50 f4       	brcc	.+20     	; 0x778 <__addsf3x+0x52>
 764:	50 3e       	cpi	r21, 0xE0	; 224
 766:	68 f1       	brcs	.+90     	; 0x7c2 <__addsf3x+0x9c>
 768:	1a 16       	cp	r1, r26
 76a:	f0 40       	sbci	r31, 0x00	; 0
 76c:	a2 2f       	mov	r26, r18
 76e:	23 2f       	mov	r18, r19
 770:	34 2f       	mov	r19, r20
 772:	44 27       	eor	r20, r20
 774:	58 5f       	subi	r21, 0xF8	; 248
 776:	f3 cf       	rjmp	.-26     	; 0x75e <__addsf3x+0x38>
 778:	46 95       	lsr	r20
 77a:	37 95       	ror	r19
 77c:	27 95       	ror	r18
 77e:	a7 95       	ror	r26
 780:	f0 40       	sbci	r31, 0x00	; 0
 782:	53 95       	inc	r21
 784:	c9 f7       	brne	.-14     	; 0x778 <__addsf3x+0x52>
 786:	7e f4       	brtc	.+30     	; 0x7a6 <__addsf3x+0x80>
 788:	1f 16       	cp	r1, r31
 78a:	ba 0b       	sbc	r27, r26
 78c:	62 0b       	sbc	r22, r18
 78e:	73 0b       	sbc	r23, r19
 790:	84 0b       	sbc	r24, r20
 792:	ba f0       	brmi	.+46     	; 0x7c2 <__addsf3x+0x9c>
 794:	91 50       	subi	r25, 0x01	; 1
 796:	a1 f0       	breq	.+40     	; 0x7c0 <__addsf3x+0x9a>
 798:	ff 0f       	add	r31, r31
 79a:	bb 1f       	adc	r27, r27
 79c:	66 1f       	adc	r22, r22
 79e:	77 1f       	adc	r23, r23
 7a0:	88 1f       	adc	r24, r24
 7a2:	c2 f7       	brpl	.-16     	; 0x794 <__addsf3x+0x6e>
 7a4:	0e c0       	rjmp	.+28     	; 0x7c2 <__addsf3x+0x9c>
 7a6:	ba 0f       	add	r27, r26
 7a8:	62 1f       	adc	r22, r18
 7aa:	73 1f       	adc	r23, r19
 7ac:	84 1f       	adc	r24, r20
 7ae:	48 f4       	brcc	.+18     	; 0x7c2 <__addsf3x+0x9c>
 7b0:	87 95       	ror	r24
 7b2:	77 95       	ror	r23
 7b4:	67 95       	ror	r22
 7b6:	b7 95       	ror	r27
 7b8:	f7 95       	ror	r31
 7ba:	9e 3f       	cpi	r25, 0xFE	; 254
 7bc:	08 f0       	brcs	.+2      	; 0x7c0 <__addsf3x+0x9a>
 7be:	b0 cf       	rjmp	.-160    	; 0x720 <__addsf3+0x28>
 7c0:	93 95       	inc	r25
 7c2:	88 0f       	add	r24, r24
 7c4:	08 f0       	brcs	.+2      	; 0x7c8 <__addsf3x+0xa2>
 7c6:	99 27       	eor	r25, r25
 7c8:	ee 0f       	add	r30, r30
 7ca:	97 95       	ror	r25
 7cc:	87 95       	ror	r24
 7ce:	08 95       	ret

000007d0 <__cmpsf2>:
 7d0:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_cmp>
 7d4:	08 f4       	brcc	.+2      	; 0x7d8 <__cmpsf2+0x8>
 7d6:	81 e0       	ldi	r24, 0x01	; 1
 7d8:	08 95       	ret

000007da <__fp_cmp>:
 7da:	99 0f       	add	r25, r25
 7dc:	00 08       	sbc	r0, r0
 7de:	55 0f       	add	r21, r21
 7e0:	aa 0b       	sbc	r26, r26
 7e2:	e0 e8       	ldi	r30, 0x80	; 128
 7e4:	fe ef       	ldi	r31, 0xFE	; 254
 7e6:	16 16       	cp	r1, r22
 7e8:	17 06       	cpc	r1, r23
 7ea:	e8 07       	cpc	r30, r24
 7ec:	f9 07       	cpc	r31, r25
 7ee:	c0 f0       	brcs	.+48     	; 0x820 <__fp_cmp+0x46>
 7f0:	12 16       	cp	r1, r18
 7f2:	13 06       	cpc	r1, r19
 7f4:	e4 07       	cpc	r30, r20
 7f6:	f5 07       	cpc	r31, r21
 7f8:	98 f0       	brcs	.+38     	; 0x820 <__fp_cmp+0x46>
 7fa:	62 1b       	sub	r22, r18
 7fc:	73 0b       	sbc	r23, r19
 7fe:	84 0b       	sbc	r24, r20
 800:	95 0b       	sbc	r25, r21
 802:	39 f4       	brne	.+14     	; 0x812 <__fp_cmp+0x38>
 804:	0a 26       	eor	r0, r26
 806:	61 f0       	breq	.+24     	; 0x820 <__fp_cmp+0x46>
 808:	23 2b       	or	r18, r19
 80a:	24 2b       	or	r18, r20
 80c:	25 2b       	or	r18, r21
 80e:	21 f4       	brne	.+8      	; 0x818 <__fp_cmp+0x3e>
 810:	08 95       	ret
 812:	0a 26       	eor	r0, r26
 814:	09 f4       	brne	.+2      	; 0x818 <__fp_cmp+0x3e>
 816:	a1 40       	sbci	r26, 0x01	; 1
 818:	a6 95       	lsr	r26
 81a:	8f ef       	ldi	r24, 0xFF	; 255
 81c:	81 1d       	adc	r24, r1
 81e:	81 1d       	adc	r24, r1
 820:	08 95       	ret

00000822 <__fp_inf>:
 822:	97 f9       	bld	r25, 7
 824:	9f 67       	ori	r25, 0x7F	; 127
 826:	80 e8       	ldi	r24, 0x80	; 128
 828:	70 e0       	ldi	r23, 0x00	; 0
 82a:	60 e0       	ldi	r22, 0x00	; 0
 82c:	08 95       	ret

0000082e <__fp_nan>:
 82e:	9f ef       	ldi	r25, 0xFF	; 255
 830:	80 ec       	ldi	r24, 0xC0	; 192
 832:	08 95       	ret

00000834 <__fp_pscA>:
 834:	00 24       	eor	r0, r0
 836:	0a 94       	dec	r0
 838:	16 16       	cp	r1, r22
 83a:	17 06       	cpc	r1, r23
 83c:	18 06       	cpc	r1, r24
 83e:	09 06       	cpc	r0, r25
 840:	08 95       	ret

00000842 <__fp_pscB>:
 842:	00 24       	eor	r0, r0
 844:	0a 94       	dec	r0
 846:	12 16       	cp	r1, r18
 848:	13 06       	cpc	r1, r19
 84a:	14 06       	cpc	r1, r20
 84c:	05 06       	cpc	r0, r21
 84e:	08 95       	ret

00000850 <__fp_round>:
 850:	09 2e       	mov	r0, r25
 852:	03 94       	inc	r0
 854:	00 0c       	add	r0, r0
 856:	11 f4       	brne	.+4      	; 0x85c <__fp_round+0xc>
 858:	88 23       	and	r24, r24
 85a:	52 f0       	brmi	.+20     	; 0x870 <__stack+0x11>
 85c:	bb 0f       	add	r27, r27
 85e:	40 f4       	brcc	.+16     	; 0x870 <__stack+0x11>
 860:	bf 2b       	or	r27, r31
 862:	11 f4       	brne	.+4      	; 0x868 <__stack+0x9>
 864:	60 ff       	sbrs	r22, 0
 866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
 868:	6f 5f       	subi	r22, 0xFF	; 255
 86a:	7f 4f       	sbci	r23, 0xFF	; 255
 86c:	8f 4f       	sbci	r24, 0xFF	; 255
 86e:	9f 4f       	sbci	r25, 0xFF	; 255
 870:	08 95       	ret

00000872 <__fp_split3>:
 872:	57 fd       	sbrc	r21, 7
 874:	90 58       	subi	r25, 0x80	; 128
 876:	44 0f       	add	r20, r20
 878:	55 1f       	adc	r21, r21
 87a:	59 f0       	breq	.+22     	; 0x892 <__fp_splitA+0x10>
 87c:	5f 3f       	cpi	r21, 0xFF	; 255
 87e:	71 f0       	breq	.+28     	; 0x89c <__fp_splitA+0x1a>
 880:	47 95       	ror	r20

00000882 <__fp_splitA>:
 882:	88 0f       	add	r24, r24
 884:	97 fb       	bst	r25, 7
 886:	99 1f       	adc	r25, r25
 888:	61 f0       	breq	.+24     	; 0x8a2 <__fp_splitA+0x20>
 88a:	9f 3f       	cpi	r25, 0xFF	; 255
 88c:	79 f0       	breq	.+30     	; 0x8ac <__fp_splitA+0x2a>
 88e:	87 95       	ror	r24
 890:	08 95       	ret
 892:	12 16       	cp	r1, r18
 894:	13 06       	cpc	r1, r19
 896:	14 06       	cpc	r1, r20
 898:	55 1f       	adc	r21, r21
 89a:	f2 cf       	rjmp	.-28     	; 0x880 <__fp_split3+0xe>
 89c:	46 95       	lsr	r20
 89e:	f1 df       	rcall	.-30     	; 0x882 <__fp_splitA>
 8a0:	08 c0       	rjmp	.+16     	; 0x8b2 <__fp_splitA+0x30>
 8a2:	16 16       	cp	r1, r22
 8a4:	17 06       	cpc	r1, r23
 8a6:	18 06       	cpc	r1, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	f1 cf       	rjmp	.-30     	; 0x88e <__fp_splitA+0xc>
 8ac:	86 95       	lsr	r24
 8ae:	71 05       	cpc	r23, r1
 8b0:	61 05       	cpc	r22, r1
 8b2:	08 94       	sec
 8b4:	08 95       	ret

000008b6 <__fp_zero>:
 8b6:	e8 94       	clt

000008b8 <__fp_szero>:
 8b8:	bb 27       	eor	r27, r27
 8ba:	66 27       	eor	r22, r22
 8bc:	77 27       	eor	r23, r23
 8be:	cb 01       	movw	r24, r22
 8c0:	97 f9       	bld	r25, 7
 8c2:	08 95       	ret

000008c4 <__gesf2>:
 8c4:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_cmp>
 8c8:	08 f4       	brcc	.+2      	; 0x8cc <__gesf2+0x8>
 8ca:	8f ef       	ldi	r24, 0xFF	; 255
 8cc:	08 95       	ret

000008ce <__mulsf3>:
 8ce:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__mulsf3x>
 8d2:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_round>
 8d6:	0e 94 1a 04 	call	0x834	; 0x834 <__fp_pscA>
 8da:	38 f0       	brcs	.+14     	; 0x8ea <__mulsf3+0x1c>
 8dc:	0e 94 21 04 	call	0x842	; 0x842 <__fp_pscB>
 8e0:	20 f0       	brcs	.+8      	; 0x8ea <__mulsf3+0x1c>
 8e2:	95 23       	and	r25, r21
 8e4:	11 f0       	breq	.+4      	; 0x8ea <__mulsf3+0x1c>
 8e6:	0c 94 11 04 	jmp	0x822	; 0x822 <__fp_inf>
 8ea:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_nan>
 8ee:	11 24       	eor	r1, r1
 8f0:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__fp_szero>

000008f4 <__mulsf3x>:
 8f4:	0e 94 39 04 	call	0x872	; 0x872 <__fp_split3>
 8f8:	70 f3       	brcs	.-36     	; 0x8d6 <__mulsf3+0x8>

000008fa <__mulsf3_pse>:
 8fa:	95 9f       	mul	r25, r21
 8fc:	c1 f3       	breq	.-16     	; 0x8ee <__mulsf3+0x20>
 8fe:	95 0f       	add	r25, r21
 900:	50 e0       	ldi	r21, 0x00	; 0
 902:	55 1f       	adc	r21, r21
 904:	62 9f       	mul	r22, r18
 906:	f0 01       	movw	r30, r0
 908:	72 9f       	mul	r23, r18
 90a:	bb 27       	eor	r27, r27
 90c:	f0 0d       	add	r31, r0
 90e:	b1 1d       	adc	r27, r1
 910:	63 9f       	mul	r22, r19
 912:	aa 27       	eor	r26, r26
 914:	f0 0d       	add	r31, r0
 916:	b1 1d       	adc	r27, r1
 918:	aa 1f       	adc	r26, r26
 91a:	64 9f       	mul	r22, r20
 91c:	66 27       	eor	r22, r22
 91e:	b0 0d       	add	r27, r0
 920:	a1 1d       	adc	r26, r1
 922:	66 1f       	adc	r22, r22
 924:	82 9f       	mul	r24, r18
 926:	22 27       	eor	r18, r18
 928:	b0 0d       	add	r27, r0
 92a:	a1 1d       	adc	r26, r1
 92c:	62 1f       	adc	r22, r18
 92e:	73 9f       	mul	r23, r19
 930:	b0 0d       	add	r27, r0
 932:	a1 1d       	adc	r26, r1
 934:	62 1f       	adc	r22, r18
 936:	83 9f       	mul	r24, r19
 938:	a0 0d       	add	r26, r0
 93a:	61 1d       	adc	r22, r1
 93c:	22 1f       	adc	r18, r18
 93e:	74 9f       	mul	r23, r20
 940:	33 27       	eor	r19, r19
 942:	a0 0d       	add	r26, r0
 944:	61 1d       	adc	r22, r1
 946:	23 1f       	adc	r18, r19
 948:	84 9f       	mul	r24, r20
 94a:	60 0d       	add	r22, r0
 94c:	21 1d       	adc	r18, r1
 94e:	82 2f       	mov	r24, r18
 950:	76 2f       	mov	r23, r22
 952:	6a 2f       	mov	r22, r26
 954:	11 24       	eor	r1, r1
 956:	9f 57       	subi	r25, 0x7F	; 127
 958:	50 40       	sbci	r21, 0x00	; 0
 95a:	9a f0       	brmi	.+38     	; 0x982 <__mulsf3_pse+0x88>
 95c:	f1 f0       	breq	.+60     	; 0x99a <__mulsf3_pse+0xa0>
 95e:	88 23       	and	r24, r24
 960:	4a f0       	brmi	.+18     	; 0x974 <__mulsf3_pse+0x7a>
 962:	ee 0f       	add	r30, r30
 964:	ff 1f       	adc	r31, r31
 966:	bb 1f       	adc	r27, r27
 968:	66 1f       	adc	r22, r22
 96a:	77 1f       	adc	r23, r23
 96c:	88 1f       	adc	r24, r24
 96e:	91 50       	subi	r25, 0x01	; 1
 970:	50 40       	sbci	r21, 0x00	; 0
 972:	a9 f7       	brne	.-22     	; 0x95e <__mulsf3_pse+0x64>
 974:	9e 3f       	cpi	r25, 0xFE	; 254
 976:	51 05       	cpc	r21, r1
 978:	80 f0       	brcs	.+32     	; 0x99a <__mulsf3_pse+0xa0>
 97a:	0c 94 11 04 	jmp	0x822	; 0x822 <__fp_inf>
 97e:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__fp_szero>
 982:	5f 3f       	cpi	r21, 0xFF	; 255
 984:	e4 f3       	brlt	.-8      	; 0x97e <__mulsf3_pse+0x84>
 986:	98 3e       	cpi	r25, 0xE8	; 232
 988:	d4 f3       	brlt	.-12     	; 0x97e <__mulsf3_pse+0x84>
 98a:	86 95       	lsr	r24
 98c:	77 95       	ror	r23
 98e:	67 95       	ror	r22
 990:	b7 95       	ror	r27
 992:	f7 95       	ror	r31
 994:	e7 95       	ror	r30
 996:	9f 5f       	subi	r25, 0xFF	; 255
 998:	c1 f7       	brne	.-16     	; 0x98a <__mulsf3_pse+0x90>
 99a:	fe 2b       	or	r31, r30
 99c:	88 0f       	add	r24, r24
 99e:	91 1d       	adc	r25, r1
 9a0:	96 95       	lsr	r25
 9a2:	87 95       	ror	r24
 9a4:	97 f9       	bld	r25, 7
 9a6:	08 95       	ret

000009a8 <__udivmodsi4>:
 9a8:	a1 e2       	ldi	r26, 0x21	; 33
 9aa:	1a 2e       	mov	r1, r26
 9ac:	aa 1b       	sub	r26, r26
 9ae:	bb 1b       	sub	r27, r27
 9b0:	fd 01       	movw	r30, r26
 9b2:	0d c0       	rjmp	.+26     	; 0x9ce <__udivmodsi4_ep>

000009b4 <__udivmodsi4_loop>:
 9b4:	aa 1f       	adc	r26, r26
 9b6:	bb 1f       	adc	r27, r27
 9b8:	ee 1f       	adc	r30, r30
 9ba:	ff 1f       	adc	r31, r31
 9bc:	a2 17       	cp	r26, r18
 9be:	b3 07       	cpc	r27, r19
 9c0:	e4 07       	cpc	r30, r20
 9c2:	f5 07       	cpc	r31, r21
 9c4:	20 f0       	brcs	.+8      	; 0x9ce <__udivmodsi4_ep>
 9c6:	a2 1b       	sub	r26, r18
 9c8:	b3 0b       	sbc	r27, r19
 9ca:	e4 0b       	sbc	r30, r20
 9cc:	f5 0b       	sbc	r31, r21

000009ce <__udivmodsi4_ep>:
 9ce:	66 1f       	adc	r22, r22
 9d0:	77 1f       	adc	r23, r23
 9d2:	88 1f       	adc	r24, r24
 9d4:	99 1f       	adc	r25, r25
 9d6:	1a 94       	dec	r1
 9d8:	69 f7       	brne	.-38     	; 0x9b4 <__udivmodsi4_loop>
 9da:	60 95       	com	r22
 9dc:	70 95       	com	r23
 9de:	80 95       	com	r24
 9e0:	90 95       	com	r25
 9e2:	9b 01       	movw	r18, r22
 9e4:	ac 01       	movw	r20, r24
 9e6:	bd 01       	movw	r22, r26
 9e8:	cf 01       	movw	r24, r30
 9ea:	08 95       	ret

000009ec <_exit>:
 9ec:	f8 94       	cli

000009ee <__stop_program>:
 9ee:	ff cf       	rjmp	.-2      	; 0x9ee <__stop_program>
